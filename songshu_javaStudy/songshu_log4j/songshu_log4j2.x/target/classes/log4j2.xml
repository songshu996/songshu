<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="5">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

    <!--变量配置-->
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
        <!-- 定义日志存储的路径 -->
        <property name="logFilePath" value="\\SONGSHU\songshu\system\log"/>
        <property name="logFileName" value="songshu.log.bak"/>
    </Properties>

    <Appenders>
        <!--输出日志到控制台-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的编码和格式-->
            <PatternLayout charset="GBK" pattern="${LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>

        <!-- 日志输出到指定文件, append="false" :每次清空文件重新输入日志,可用于测试-->
        <File name="Filelog" fileName="${logFilePath}/test.log" append="true">
            <PatternLayout charset="GBK" pattern="${LOG_PATTERN}"/>
        </File>

        <!--SMTP :邮件发送日志-->
        <SMTP name="Mail" subject="${mail_subject}" to="${toMailAddress}" from="${fromMailAddress}"
              smtpUsername="${smtpUsername}" smtpPassword="${smtpPassword}" smtpHost="${smtpHost}"
              smtpDebug="false" smtpPort="25" bufferSize="10">
            <PatternLayout pattern="${LOG_PATTERN}" />
        </SMTP>


        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${logFilePath}/info.log"
                     filePattern="${logFilePath}/INFO-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout charset="GBK" pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="1MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>
    </Appenders>




    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <root level="info">
            <appender-ref ref="Console"/>
            <appender-ref ref="Filelog"/>
            <appender-ref ref="RollingFileInfo"/>
        </root>
    </loggers>

</configuration>